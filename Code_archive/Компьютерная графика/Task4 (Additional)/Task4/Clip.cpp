#include "Transform.h"#include "Clip.h"bool Clip(point &A, point &B, point Pmin, point Pmax){	int i = 1;	float tMin = 0.0;	float tMax = 1.0;	float N[4][2] = { {1,0},{ 0,-1 },{ -1,0 },{ 0,1 } };	float F[4][2] = { {System::Math::Min(A.x,B.x), System::Math::Min(A.y,B.y) },{ System::Math::Min(A.x,B.x), System::Math::Max(A.y,B.y) },{ System::Math::Max(A.x,B.x), System::Math::Min(A.y,B.y) },{ System::Math::Max(A.x,B.x), System::Math::Max(A.y,B.y) } };	float p[2] = {B.x-A.x,B.y-A.y};	float p1[2] = {A.x,A.y};	while (tMin<tMax)	{		if (i > 4)		{			float x1=A.x+(B.x-A.x)*tMin;			float x2= A.x + (B.x - A.x)*tMax;;			float y1=A.y+(B.y-A.y)*tMin;			float y2= A.y + (B.y - A.y)*tMax;;			A.x = x1;			B.x = x2;			A.y = y1;			B.y = y2;			return true;		}		else		{			float P = p[0] * N[i][0] + p[1] * N[i][1];			float Q = (p1[0] - F[i][0])*N[i][0] + (p1[1] - F[i][1])*N[i][1];			if (P == 0)			{				if (Q < 0)				{					return false;				}			}			else			{				if (P > 0)				{					tMin = System::Math::Max(tMin, -Q / P);				}				if (P < 0)				{					tMax = System::Math::Min(tMax, -Q / P);				}			}		}		i = i + 1;	}	return false;}